name: Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    # Run on all pull requests, regardless of target branch

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/pcg-server
  MUTATION_TESTS_REF: zgrannan/update-pcg
  FLOWISTRY_REF: zgrannan/pcg-next4
  SYMBOLIC_EXECUTION_REF: main
  PURIFICATION_PRUSTI_REF: zgrannan/next5

jobs:
  check_warnings:
    runs-on: ${{ vars.RUNNER || 'ubuntu-latest' }}
    container: ${{ fromJSON(vars.CONTAINER || 'null') }}
    steps:
    - uses: actions/checkout@v4
    - name: Check for warnings
      env:
        RUSTFLAGS: "-D warnings"
      run: cargo check --all-targets --lib --bins --tests --examples --benches --message-format=json

  clippy:
    runs-on: ${{ vars.RUNNER || 'ubuntu-latest' }}
    container: ${{ fromJSON(vars.CONTAINER || 'null') }}
    steps:
    - uses: actions/checkout@v4
    - name: Run Clippy
      run: cargo clippy -- -D warnings

  rustfmt:
    runs-on: ${{ vars.RUNNER || 'ubuntu-latest' }}
    container: ${{ fromJSON(vars.CONTAINER || 'null') }}
    steps:
    - uses: actions/checkout@v4
    - name: Check code formatting
      run: cargo fmt --all -- --check

  pcg_tests:
    runs-on: ${{ vars.RUNNER || 'ubuntu-latest' }}
    container: ${{ fromJSON(vars.CONTAINER || 'null') }}
    steps:
    - uses: actions/checkout@v4
    - name: Run tests on files
      run: cd pcg-tests && cargo test

  build_2025_07_21:
    runs-on: ${{ vars.RUNNER || 'ubuntu-latest' }}
    container: ${{ fromJSON(vars.CONTAINER || 'null') }}
    steps:
    - uses: actions/checkout@v4
    - name: Build using Rust Nightly 2025-07-21
      run: cp rust-toolchain-2025-07-21 rust-toolchain && cargo build --no-default-features

  unit_tests:
    runs-on: ${{ vars.RUNNER || 'ubuntu-latest' }}
    container: ${{ fromJSON(vars.CONTAINER || 'null') }}
    steps:
    - uses: actions/checkout@v4
    - name: Run unit tests
      run: cargo test -p pcg --lib

  doc_tests:
    runs-on: ${{ vars.RUNNER || 'ubuntu-latest' }}
    container: ${{ fromJSON(vars.CONTAINER || 'null') }}
    steps:
    - uses: actions/checkout@v4
    - name: Run unit tests
      run: cargo test -p pcg --doc

  prusti_purification_tests:
    runs-on: ${{ vars.RUNNER || 'ubuntu-latest' }}
    container: ${{ fromJSON(vars.CONTAINER || 'null') }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        path: pcg

    - name: Checkout symbolic execution repository
      uses: actions/checkout@v4
      with:
        repository: zgrannan/symbolic-execution
        ref: ${{ env.SYMBOLIC_EXECUTION_REF }}
        path: symbolic-execution

    - name: Checkout prusti repository
      uses: actions/checkout@v4
      with:
        repository: zgrannan/prusti-dev
        ref: ${{ env.PURIFICATION_PRUSTI_REF }}
        path: prusti-dev

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-2024-10-15
        components: rustc-dev, llvm-tools-preview
        override: true

    - name: Install Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Run Prusti tests
      working-directory: prusti-dev
      run: ./x.py setup && python3 test-rpe.py --no-server

  mutation_tests:
    runs-on: ${{ vars.RUNNER || 'ubuntu-latest' }}
    container: ${{ fromJSON(vars.CONTAINER || 'null') }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        path: pcg

    - name: Checkout mutation testing repository
      uses: actions/checkout@v4
      with:
        repository: prusti/pcg-mutation-testing
        ref: ${{ env.MUTATION_TESTS_REF }}
        path: pcg-mutation-testing

    - name: Build mutation testing tool
      working-directory: pcg-mutation-testing
      run: cargo build

  flowistry_tests:
    runs-on: ${{ vars.RUNNER || 'ubuntu-latest' }}
    container: ${{ fromJSON(vars.CONTAINER || 'null') }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        path: pcg

    - name: Checkout flowistry repository
      uses: actions/checkout@v4
      with:
        repository: zgrannan/flowistry
        ref: ${{ env.FLOWISTRY_REF }}
        path: flowistry

    - name: Run flowistry tests
      working-directory: flowistry/crates/flowistry
      run: cargo test
